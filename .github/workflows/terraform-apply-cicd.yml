name: The Plug Terraform infrastructure CI/CD - apply

on:
  push:
    branches:
      - cicd # TODO change to main after debug
    paths:
      - aws/iac/**
  workflow_dispatch:

env:
  TF_CLOUD_ORGANIZATION: "The-Plug"
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  TF_WORKSPACE: "The-Plug-Workspace-GitHub-Actions"
  CONFIG_DIRECTORY: "./aws/iac"

jobs:
  apply:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: aws/iac
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Prepare variable values
        working-directory: aws/iac
        run: |
          cat > prod.auto.tfvars<< EOF
          email_host_user_secret     = "${{ secrets.EMAIL_HOST_USER }}"
          email_host_password_secret = "${{ secrets.EMAIL_HOST_PASSWORD }}"
          secret_key_secret          = "${{ secrets.SECRET_KEY }}"
          email                      = "${{ secrets.NOTIFICATION_EMAIL }}"
          EOF

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.4

      - name: Terraform Format
        run: terraform fmt -recursive

      - name: Upload Configuration
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.0
        id: apply-upload
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.CONFIG_DIRECTORY }}

      - name: Create Apply Run
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.0
        id: apply-run
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.apply-upload.outputs.configuration_version_id }}

      - name: Apply
        uses: hashicorp/tfc-workflows-github/actions/apply-run@v1.0.0
        if: fromJSON(steps.apply-run.outputs.payload).data.attributes.actions.IsConfirmable
        id: apply
        with:
          run: ${{ steps.apply-run.outputs.run_id }}
          comment: "Apply Run from GitHub Actions CI ${{ github.sha }}"